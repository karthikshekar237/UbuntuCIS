---
- name: Gather mounted partitions
  ansible.builtin.command: mount
  register: mounted_partitions

- name: Debug mounted partitions
  ansible.builtin.debug:
    var: mounted_partitions.stdout

- name: Set mount names
  ansible.builtin.set_fact:
    mount_names: "{{ mounted_partitions.stdout | regex_findall(' on (/[^ ]*) ') | flatten }}"
  when: mounted_partitions.stdout is defined

- name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
    - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config"
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/cramfs.conf
        regexp: '^(#)?install cramfs(\\s|$)'
        line: install cramfs /bin/true
        create: true
      notify: update_initramfs

    - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | blacklist"
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/blacklist.conf
        regexp: "^(#)?blacklist cramfs(\\s|$)"
        line: "blacklist cramfs"
        create: true
        mode: '0600'
      notify: update_initramfs

    - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Disable cramfs"
      community.general.modprobe:
        name: cramfs
        state: absent
      when: ansible_connection != 'docker'
      notify: update_initramfs
  when:
    - ubtu22cis_rule_1_1_1_1
  tags:
    - level1-server
    - level1-workstation
    - automated
    - patch
    - rule_1.1.1.1
    - cramfs

- name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
    - name: "Check if squashfs is built-in"
      ansible.builtin.shell: "modinfo squashfs"
      register: squashfs_check
      changed_when: false
      failed_when: false

    - name: Debug squashfs_check
      ansible.builtin.debug:
        var: squashfs_check

    - name: "Set squashfs_builtin"
      ansible.builtin.set_fact:
        squashfs_builtin: "{{ 'builtin' in squashfs_check.stdout }}"
      when: squashfs_check.stdout is defined

    - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprobe config"
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/squashfs.conf
        regexp: '^(#)?install squashfs(\\s|$)'
        line: install squashfs /bin/true
        create: true
      notify: update_initramfs

    - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | blacklist"
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/blacklist.conf
        regexp: "^(#)?blacklist squashfs(\\s|$)"
        line: "blacklist squashfs"
        create: true
        mode: '0600'
      notify: update_initramfs

    - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | Disable squashfs"
      community.general.modprobe:
        name: squashfs
        state: absent
      when: not squashfs_builtin
      notify: update_initramfs

    - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | Blacklist built-in module"
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/blacklist.conf
        regexp: "^(#)?blacklist squashfs(\\s|$)"
        line: "blacklist squashfs"
        create: true
        mode: '0600'
      when: squashfs_builtin
      notify: update_initramfs
  when:
    - ubtu22cis_rule_1_1_1_2
    - snap_pkg_mgr.stdout == "0"
  tags:
    - level2-server
    - level2-workstation
    - automated
    - patch
    - rule_1.1.1.2
    - squashfs

- name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
    - name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled | Edit modprobe config"
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/udf.conf
        regexp: '^(#)?install udf(\\s|$)'
        line: install udf /bin/true
        create: true
      notify: update_initramfs

    - name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled | blacklist"
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/blacklist.conf
        regexp: "^(#)?blacklist udf(\\s|$)"
        line: "blacklist udf"
        create: true
        mode: '0600'
      notify: update_initramfs

    - name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled | Disable udf"
      community.general.modprobe:
        name: udf
        state: absent
      when: ansible_connection != 'docker'
      notify: update_initramfs
  when:
    - ubtu22cis_rule_1_1_1_3
  tags:
    - level2-server
    - level2-workstation
    - automated
    - patch
    - rule_1.1.1.3
    - udf

