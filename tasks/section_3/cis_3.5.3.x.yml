---
- hosts: localhost
  become: true
  vars:
    ubtu22cis_rule_3_5_3_1_1: true
    ubtu22cis_rule_3_5_3_1_2: true
    ubtu22cis_rule_3_5_3_1_3: true
    ubtu22cis_rule_3_5_3_2_1: true
    ubtu22cis_rule_3_5_3_2_2: true
    ubtu22cis_rule_3_5_3_2_3: true
    ubtu22cis_rule_3_5_3_2_4: true
    ubtu22cis_rule_3_5_3_3_1: true
    ubtu22cis_rule_3_5_3_3_2: true
    ubtu22cis_rule_3_5_3_3_3: true
    ubtu22cis_rule_3_5_3_3_4: true
    ubtu22cis_firewall_package: "iptables"
    ubtu22cis_ipv4_required: true
    ubtu22cis_ipv6_required: true
    ubtu22cis_purge_apt: true

  tasks:
    - name: "3.5.3.1.1 | PATCH | Ensure iptables packages are installed"
      ansible.builtin.package:
        name: ['iptables', 'iptables-persistent']
        state: present
      when:
        - ubtu22cis_rule_3_5_3_1_1
        - ubtu22cis_firewall_package == "iptables"
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_3.5.3.1.1
        - iptables

    - name: "3.5.3.1.2 | PATCH | Ensure nftables is not installed with iptables"
      ansible.builtin.package:
        name: nftables
        state: absent
        purge: "{{ ubtu22cis_purge_apt }}"
      when:
        - ubtu22cis_rule_3_5_3_1_2
        - ubtu22cis_firewall_package == "iptables"
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_3.5.3.1.2
        - iptables

    - name: "3.5.3.1.3 | PATCH | Ensure ufw is uninstalled or disabled with iptables"
      ansible.builtin.package:
        name: ufw
        state: absent
      when:
        - ubtu22cis_rule_3_5_3_1_3
        - ubtu22cis_firewall_package == "iptables"
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_3.5.3.1.3
        - iptables

    - name: "3.5.3.2.1 | PATCH | Ensure iptables default deny firewall policy"
      block:
        - name: "Configure SSH to be allowed in"
          ansible.builtin.iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
          notify: Iptables persistent

        - name: "Configure SSH to be allowed out"
          ansible.builtin.iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
          notify: Iptables persistent

        - name: "Enable apt traffic"
          ansible.builtin.iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT
          notify: Iptables persistent

        - name: "Set drop items"
          ansible.builtin.iptables:
            policy: DROP
            chain: "{{ item }}"
          notify: Iptables persistent
          with_items:
            - INPUT
            - FORWARD
            - OUTPUT
      when:
        - ubtu22cis_rule_3_5_3_2_1
        - ubtu22cis_ipv4_required
        - not system_is_ec2
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_3.5.3.2.1
        - iptables

    - name: "3.5.3.2.2 | PATCH | Ensure iptables loopback traffic is configured"
      block:
        - name: "INPUT loopback ACCEPT"
          ansible.builtin.iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT
          notify: Iptables persistent

        - name: "OUTPUT loopback ACCEPT"
          ansible.builtin.iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT
          notify: Iptables persistent

        - name: "INPUT loopback drop"
          ansible.builtin.iptables:
            action: append
            chain: INPUT
            source: 127.0.0.0/8
            jump: DROP
          notify: Iptables persistent
      when:
        - ubtu22cis_rule_3_5_3_2_2
        - ubtu22cis_firewall_package == "iptables"
        - ubtu22cis_ipv4_required
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_3.5.3.2.2
        - iptables

    - name: "3.5.3.2.3 | PATCH | Ensure iptables outbound and established connections are configured"
      ansible.builtin.iptables:
        action: append
        chain: '{{ item.chain }}'
        protocol: '{{ item.protocol }}'
        match: state
        ctstate: '{{ item.ctstate }}'
        jump: ACCEPT
      notify: Iptables persistent
      with_items:
        - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
        - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
        - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
        - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
        - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
        - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
      when:
        - ubtu22cis_rule_3_5_3_2_3
        - ubtu22cis_firewall_package == "iptables"
        - ubtu22cis_ipv4_required
      tags:
        - level1-server
        - level1-workstation
        - manual
        - patch
        - rule_3.5.3.2.3
        - iptables

    - name: "3.5.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports"
      block:
        - name: "Get list of open ports"
          ansible.builtin.shell: ss -4tuln
          changed_when: false
          failed_when: false
          check_mode: false
          register: ubtu22cis_3_5_3_2_4_open_ports

        - name: "Get list of rules"
          ansible.builtin.shell: iptables -L INPUT -v -n
          changed_when: false
          failed_when: false
          check_mode: false
          register: ubtu22cis_3_5_3_2_4_current_rules

        - name: "Warn about settings"
          ansible.builtin.debug:
            msg:
              - "Warning!! Below is the list the open ports and current rules"
              - "Please create a rule for any open port that does not have a current rule"
              - "Open Ports:"
              - "{{ ubtu22cis_3_5_3_2_4_open_ports.stdout_lines }}"
              - "Current Rules:"
              - "{{ ubtu22cis_3_5_3_2_4_current_rules.stdout_lines }}"

        - name: "Set warning count"
          ansible.builtin.import_tasks:
            file: warning_facts.yml
      vars:
        warn_control_id: '3.5.3.2.4'
      when:
        - ubtu22cis_rule_3_5_3_2_4
        - ubtu22cis_firewall_package == "iptables"
        - ubtu22cis_ipv4_required
      tags:
        - level1-server
        - level1-workstation
        - automated
        - audit
        - rule_3.5.3.2.4
        - iptables

    - name: "3.5.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy"
      block:
        - name: "Configure SSH to be allowed out"
          ansible.builtin.iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
            ip_version: ipv6
          notify: Ip6tables persistent

        - name: "Enable apt traffic"
          ansible.builtin.iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT
            ip_version: ipv6
          notify: Ip6tables persistent

        - name: "Set drop items"
          ansible.builtin.iptables:
            policy: DROP
            chain: "{{ item }}"
            ip_version: ipv6
          notify: Ip6tables persistent
          with_items:
            - INPUT
            - FORWARD
            - OUTPUT
      when:
        - ubtu22cis_rule_3_5_3_3_1
        - ubtu22cis_ipv6_required
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_3.5.3.3.1
        - ip6tables

    - name: "3.5.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured"
      block:
        - name: "INPUT loopback ACCEPT"
          ansible.builtin.iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT
            ip_version: ipv6
          notify: Ip6tables persistent

        - name: "OUTPUT loopback ACCEPT"
          ansible.builtin.iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT
            ip_version: ipv6
          notify: Ip6tables persistent

        - name: "INPUT loopback drop"
          ansible.builtin.iptables:
            action: append
            chain: INPUT
            source: ::1
            jump: DROP
            ip_version: ipv6
          notify: Ip6tables persistent
      when:
        - ubtu22cis_rule_3_5_3_3_2
        - ubtu22cis_firewall_package == "iptables"
        - ubtu22cis_ipv6_required
        - not ubtu22cis_ipv4_required
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_3.5.3.3.2
        - ip6tables

    - name: "3.5.3.3.3 | PATCH | Ensure ip6tables outbound and established connections are configured"
      ansible.builtin.iptables:
        action: append
        chain: '{{ item.chain }}'
        protocol: '{{ item.protocol }}'
        match: state
        ctstate: '{{ item.ctstate }}'
        jump: ACCEPT
        ip_version: ipv6
      notify: Ip6tables persistent
      with_items:
        - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
        - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
        - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
        - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
        - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
        - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
      when:
        - ubtu22cis_rule_3_5_3_3_3
        - ubtu22cis_firewall_package == "iptables"
        - ubtu22cis_ipv6_required
        - not ubtu22cis_ipv4_required
      tags:
        - level1-server
        - level1-workstation
        - manual
        - patch
        - rule_3.5.3.3.3
        - ip6tables

    - name: "3.5.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports"
      block:
        - name: "Get list of open ports"
          ansible.builtin.shell: ss -6tuln
          changed_when: false
          failed_when: false
          check_mode: false
          register: ubtu22cis_3_5_3_3_4_open_ports

        - name: "Get list of rules"
          ansible.builtin.shell: ip6tables -L INPUT -v -n
          changed_when: false
          failed_when: false
          check_mode: false
          register: ubtu22cis_3_5_3_3_4_current_rules

        - name: "Warn about settings"
          ansible.builtin.debug:
            msg:
              - "Warning!! Below is the list the open ports and current rules"
              - "Please create a rule for any open port that does not have a current rule"
              - "Open Ports:"
              - "{{ ubtu22cis_3_5_3_3_4_open_ports.stdout_lines }}"
              - "Current Rules:"
              - "{{ ubtu22cis_3_5_3_3_4_current_rules.stdout_lines }}"

        - name: "Set warning count"
          ansible.builtin.import_tasks:
            file: warning_facts.yml
      vars:
        warn_control_id: '3.5.3.3.4'
      when:
        - ubtu22cis_rule_3_5_3_3_4
        - ubtu22cis_firewall_package == "iptables"
        - ubtu22cis_ipv6_required
        - not ubtu22cis_ipv4_required
      tags:
        - level1-server
        - level1-workstation
        - automated
        - audit
        - rule_3.5.3.3.4
        - ip6tables
