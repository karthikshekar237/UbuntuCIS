---
- hosts: localhost
  become: true
  vars:
    ubtu22cis_rule_1_6_1_1: true
    ubtu22cis_rule_1_6_1_2: true
    ubtu22cis_rule_1_6_1_3: true
    ubtu22cis_rule_1_6_1_4: true
    ubtu22cis_apparmor_disable: false
    ubtu22cis_apparmor_mode: "enforce"

  tasks:
    - name: "1.6.1.1 | PATCH | Ensure AppArmor is installed"
      ansible.builtin.package:
        name: ['apparmor', 'apparmor-utils']
        state: present
      when:
        - ubtu22cis_rule_1_6_1_1
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_1.6.1.1
        - apparmor

    - name: "Gather GRUB configuration"
      ansible.builtin.shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
      changed_when: false
      failed_when: false
      register: ubtu22cis_1_6_1_2_cmdline_settings
      when:
        - ubtu22cis_rule_1_6_1_2
      tags:
        - level1-server
        - level1-workstation
        - audit
        - rule_1.6.1.2
        - apparmor

    - name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration"
      block:
        - name: "Set apparmor settings if none exist"
          ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX=".*"'
            line: 'GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor {{ ubtu22cis_1_6_1_2_cmdline_settings.stdout }}"'
            backrefs: true
            insertafter: '^GRUB_'
          notify: Grub update
          when:
            - "'apparmor' not in ubtu22cis_1_6_1_2_cmdline_settings.stdout"
            - "'security' not in ubtu22cis_1_6_1_2_cmdline_settings.stdout"

        - name: "Replace apparmor settings when exists"
          ansible.builtin.replace:
            path: /etc/default/grub
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
          with_items:
            - { regexp: 'apparmor=\w+', replace: 'apparmor=1' }
            - { regexp: 'security=\w+', replace: 'security=apparmor' }
          notify: Grub update
          when:
            - "'apparmor' in ubtu22cis_1_6_1_2_cmdline_settings.stdout or 'security' in ubtu22cis_1_6_1_2_cmdline_settings.stdout"

      when:
        - ubtu22cis_rule_1_6_1_2
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_1.6.1.2
        - apparmor

    - name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing"
      block:
        - name: "Make sure that 1.6.1.3 is not run"
          ansible.builtin.set_fact:
            control_1_6_1_4_was_run: true
            ubtu22cis_apparmor_enforce_only: true
          changed_when: false

        - name: "Get pre apply enforce count"
          ansible.builtin.shell: apparmor_status | grep "profiles are in enforce mode" | tr -d -c 0-9
          changed_when: false
          failed_when: false
          register: ubtu22cis_1_6_1_4_pre_count

        - name: "Apply enforcing to /etc/apparmor.d profiles"
          ansible.builtin.shell: aa-enforce /etc/apparmor.d/*
          changed_when: false
          failed_when: false

        - name: "Get post apply enforce count"
          ansible.builtin.shell: apparmor_status | grep "profiles are in enforce mode" | tr -d -c 0-9
          changed_when: false
          failed_when: false
          register: ubtu22cis_1_6_1_4_post_count

        - name: "Flag for idempotency"
          ansible.builtin.debug:
            msg: Changed! The profiles in /etc/apparmor.d were set to enforcing
          changed_when: true
          when: ubtu22cis_1_6_1_4_pre_count.stdout != ubtu22cis_1_6_1_4_post_count.stdout

      when:
        - ubtu22cis_rule_1_6_1_4
        - not ubtu22cis_apparmor_disable
      tags:
        - level2-server
        - level2-workstation
        - automated
        - scored
        - patch
        - rule_1.6.1.4
        - apparmor

    - name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode"
      block:
        - name: "Set ubtu22cis_apparmor_enforce_only true for GOSS"
          ansible.builtin.set_fact:
            ubtu22cis_apparmor_enforce_only: true
          changed_when: false
          when:
            - ubtu22cis_apparmor_mode == "enforce"

        - name: "Set ubtu22cis_apparmor_enforce_only false for GOSS"
          ansible.builtin.set_fact:
            ubtu22cis_apparmor_enforce_only: false
          changed_when: false
          when:
            - ubtu22cis_apparmor_mode == "complain"

        - name: "Get pre apply enforce count"
          ansible.builtin.shell: apparmor_status | grep "profiles are in {{ubtu22cis_apparmor_mode}} mode" | tr -d -c 0-9
          changed_when: false
          failed_when: false
          register: ubtu22cis_1_6_1_3_pre_count

        - name: "Apply complaining/enforcing to /etc/apparmor.d profiles"
          ansible.builtin.shell: aa-{{ubtu22cis_apparmor_mode}} /etc/apparmor.d/*
          changed_when: false
          failed_when: false

        - name: "Get post apply enforce count"
          ansible.builtin.shell: apparmor_status | grep "profiles are in {{ubtu22cis_apparmor_mode}} mode" | tr -d -c 0-9
          changed_when: false
          failed_when: false
          register: ubtu22cis_1_6_1_3_post_count

        - name: "Flag for idempotency"
          ansible.builtin.debug:
            msg: Changed! The profiles in /etc/apparmor.d were set to {{ubtu22cis_apparmor_mode}} mode
          changed_when: true
          when: ubtu22cis_1_6_1_3_pre_count.stdout != ubtu22cis_1_6_1_3_post_count.stdout

      when:
        - ubtu22cis_rule_1_6_1_3
        - not ubtu22cis_apparmor_disable
        - not control_1_6_1_4_was_run
      tags:
        - level1-server
        - level1-workstation
        - automated
        - patch
        - rule_1.6.1.3
        - apparmor

  handlers:
    - name: Grub update
      ansible.builtin.command: update-grub
      become: true
